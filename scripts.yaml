# Light states (on/off) control
mqtt_light_state:
  alias: 'MQTT 2 light state'
  fields:
    topic:
      description: "MQTT topic"
    payload:
      description: "MQTT payload"
  sequence:
  - service: "{{ 'light.turn_' + payload }}"
    target:
      entity_id:
      - "{{ 'light.' + topic | replace('home/light/', '') | replace('/state/set', '') }}"

# Light brightness control 
mqtt_light_brightness:
  alias: 'MQTT 2 light brightness'
  fields:
    topic:
      description: "MQTT topic"
    payload:
      description: "MQTT payload"
  sequence:
  - service: light.turn_on
    target:
      entity_id:
      - "{{ 'light.' + topic | replace('home/light/', '') | replace('/brightness/set', '') }}"
    data:
      brightness: "{{ payload }}"

# Light colour temperature control
mqtt_light_ct:
  alias: 'MQTT 2 light colour temperature'
  fields:
    topic:
      description: "MQTT topic"
    payload:
      description: "MQTT payload"
  sequence:
  - service: light.turn_on
    target:
      entity_id:
      - "{{ 'light.' + topic | replace('home/light/', '') | replace('/color_temp/set', '') }}"
    data:
      color_temp: "{{ payload }}"

# Switch state (on/off) control
mqtt_switch_state:
  alias: 'MQTT 2 switch state'
  fields:
    topic:
      description: "MQTT topic"
    payload:
      description: "MQTT payload"
  sequence:
  - service: "{{ 'switch.turn_' + payload }}"
    target:
      entity_id:
      - "{{ 'switch.' + topic | replace('home/switch/', '') | replace('/state/set', '') }}"

# Cover position control
mqtt_cover_position:
  alias: 'MQTT 2 cover position'
  fields:
    topic:
      description: "MQTT topic"
    payload:
      description: "MQTT payload"
  sequence:
  - service: cover.set_cover_position
    target:
      entity_id:
      - "{{ 'cover.' + topic | replace('home/cover/', '') | replace('/current_position/set', '') }}"
    data:
      position: "{{ payload }}"